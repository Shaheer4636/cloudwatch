set -euo pipefail
REGION=us-east-1
CLUSTER=Strata-uat-eks-OwJIPjnj
LG_PERF="/aws/containerinsights/$CLUSTER/performance"
STREAM="bootstrap-$(date -u +%Y%m%dT%H%M%S)"

aws logs create-log-group --log-group-name "$LG_PERF" 2>/dev/null || true
aws logs put-retention-policy --log-group-name "$LG_PERF" --retention-in-days 7 || true
aws logs create-log-stream --log-group-name "$LG_PERF" --log-stream-name "$STREAM" 2>/dev/null || true

# helper timestamp (ms)
now_ms() { echo $(( $(date +%s) * 1000 )); }
T0=$(now_ms); T1=$((T0+1)); T2=$((T0+2)); T3=$((T0+3))

# 1) Write 4 EMF lines (UNescaped) to a file
cat > emf.jsonl <<EOF
{"_aws":{"Timestamp":$T0,"CloudWatchMetrics":[{"Namespace":"ContainerInsights","Dimensions":[["ClusterName","NodeName"]],"Metrics":[{"Name":"node_cpu_utilization","Unit":"Percent"},{"Name":"node_memory_utilization","Unit":"Percent"},{"Name":"node_filesystem_utilization","Unit":"Percent"}]}]},"ClusterName":"$CLUSTER","NodeName":"demo-node-1","node_cpu_utilization":23.4,"node_memory_utilization":61.2,"node_filesystem_utilization":48.7}
{"_aws":{"Timestamp":$T1,"CloudWatchMetrics":[{"Namespace":"ContainerInsights","Dimensions":[["ClusterName","NodeName"]],"Metrics":[{"Name":"node_cpu_utilization","Unit":"Percent"},{"Name":"node_memory_utilization","Unit":"Percent"},{"Name":"node_filesystem_utilization","Unit":"Percent"}]}]},"ClusterName":"$CLUSTER","NodeName":"demo-node-2","node_cpu_utilization":17.9,"node_memory_utilization":42.0,"node_filesystem_utilization":55.1}
{"_aws":{"Timestamp":$T2,"CloudWatchMetrics":[{"Namespace":"ContainerInsights","Dimensions":[["ClusterName","Namespace"]],"Metrics":[{"Name":"pod_number_of_running_pods","Unit":"Count"}]}]},"ClusterName":"$CLUSTER","Namespace":"kube-system","pod_number_of_running_pods":42}
{"_aws":{"Timestamp":$T3,"CloudWatchMetrics":[{"Namespace":"ContainerInsights","Dimensions":[["ClusterName","Namespace"]],"Metrics":[{"Name":"pod_number_of_running_pods","Unit":"Count"}]}]},"ClusterName":"$CLUSTER","Namespace":"default","pod_number_of_running_pods":15}
EOF

# 2) Escape each line as a JSON string using jq (so message is valid)
MSG1=$(sed -n '1p' emf.jsonl | jq -Rs .)
MSG2=$(sed -n '2p' emf.jsonl | jq -Rs .)
MSG3=$(sed -n '3p' emf.jsonl | jq -Rs .)
MSG4=$(sed -n '4p' emf.jsonl | jq -Rs .)

cat > events.json <<EOF
[
  {"timestamp": $T0, "message": $MSG1},
  {"timestamp": $T1, "message": $MSG2},
  {"timestamp": $T2, "message": $MSG3},
  {"timestamp": $T3, "message": $MSG4}
]
EOF

# 3) Put EMF events (all in one call)
aws logs put-log-events \
  --log-group-name "$LG_PERF" \
  --log-stream-name "$STREAM" \
  --log-events file://events.json

# 4) Verify EMF is in the log group
aws logs filter-log-events \
  --log-group-name "$LG_PERF" --limit 1 \
  --query 'events[0].message'







START=$(date -u -d '30 minutes ago' +%Y-%m-%dT%H:%M:%SZ)
END=$(date -u +%Y-%m-%dT%H:%M:%SZ)

cat > queries.json <<'JSON'
[
  {
    "Id": "cpu",
    "Expression": "SEARCH('{ContainerInsights,ClusterName,Strata-uat-eks-OwJIPjnj,NodeName,*} MetricName=\"node_cpu_utilization\"', 'Average', 300)"
  },
  {
    "Id": "pods",
    "Expression": "SEARCH('{ContainerInsights,ClusterName,Strata-uat-eks-OwJIPjnj,Namespace,*} MetricName=\"pod_number_of_running_pods\"', 'Sum', 300)"
  }
]
JSON

aws cloudwatch get-metric-data \
  --region us-east-1 \
  --start-time "$START" --end-time "$END" \
  --metric-data-queries file://queries.json \
  --query 'MetricDataResults[].{Id:Id,Points:length(Timestamps)}'





sed -i 's/"AWS\/ContainerInsights"/"ContainerInsights"/g' dashboard.json
aws cloudwatch put-dashboard \
  --region us-east-1 \
  --dashboard-name "Strata-uat-eks-OwJIPjnj-cloudwatch" \
  --dashboard-body file://dashboard.json
